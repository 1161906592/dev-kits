<script>
import { FormInst } from "naive-ui"

export const XXXModal = defineComponent({
  props: {
    ...createModalProps<<%- rowType %>>(),
  },
  setup(props) {
    const formInstRef = ref<FormInst | null>(null)
    // 表单校验规则
    const rules: FormRules = {
      <% formRuleFields.forEach(function(item){ %>
        <%- item.key %>: { required: true, trigger: 'input', message: '请<%- item.meta?.includes('date-time') ? '选择' : '输入' %><%- item.title %>' },
      <% }); %>
    }

    // 提交表单
    const {
      loadingRef,
      submit: { modelRef, handleSubmit, resetFields },
    } = useSubmitLogic(
      async (model) => {
        const converter = {
          <% formModelFields.forEach(function(item){ %>
            <%- item.key %>: pickConvert.preset.<%- item.meta?.includes('date-time') ? 'toTimeString' : 'toNumber' %>,<% if(item.title) { %> // <%- item.title %><% } %>
          <% }); %>
        }
        const res = await <%- name %>({
          ...pickConvert(model, converter)
        })

        return res.content
      },
      {
        onSuccess() {
          perferMessage.success('操作成功')
          props.onUpdate?.()
          props['onUpdate:show']?.(false)
        },
        model: () => ({} as PartialNull<ModalFormModel>),
        validate: () => formInstRef.value?.validate(),
        manual: true,
      }
    )

    useModalLogic({
      props,
      onShow: () => {
        if (props.data) {
          modelRef.value = pickConvert(props.data, {
            <% formModelFields.forEach(function(item){ %>
              <%- item.key %>: pickConvert.preset.<%- item.meta?.includes('date-time') ? 'toTimeStamp' : 'toString' %>,<% if(item.title) { %> // <%- item.title %><% } %>
            <% }); %>
          }, null)
        } else {
          resetFields()
        }
      },
      restoreValidation: () => formInstRef.value?.restoreValidation()
    })

    <% if(formFields.some(d => d.type === "number")) { %>
      // 数字输入限制
      const allowNumber = allowInputNumber()
    <% } %>
    return () => (
      <NModal
        preset="card"
        showIcon={false}
        maskClosable={false}
        title="title"
        show={props.show}
        onUpdate:show={props['onUpdate:show']}
        style={{ width: '900px' }}
        size="small"
        autoFocus={false}
        {...presetStyleModal}
        v-slots={{
          footer: () => (
            <NSpace size="large" justify="end">
              <NButton onClick={() => props['onUpdate:show']?.(false)}>取消</NButton>
              <NButton type="primary" onClick={handleSubmit} loading={loadingRef.value}>
                确定
              </NButton>
            </NSpace>
          ),
        }}
      >
        <NForm
          model={modelRef.value}
          ref={formInstRef}
          rules={rules}
          labelPlacement="left"
          requireMarkPlacement="left"
          labelWidth={120}
        >
          <div class="un-p-12px">
          <% formFields.forEach(function(item){ %>
            <NFormItem label="<%- item.title %>:" path="<%- item.key %>">
              <<%- item.meta?.includes('date-time') ? 'NDatePicker' : 'NInput' %>
                v-model:value={modelRef.value.<%- item.key %>}
                <% if(item.type === "number") { %>
                allowInput={allowNumber}
                <% } %>
              ></<%- item.meta?.includes('date-time') ? 'NDatePicker' : 'NInput' %>>
            </NFormItem>
          <% }); %>
          </div>
        </NForm>
      </NModal>
    )
  },
})

/**
 * 表单数据类型
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 */
 export interface ModalFormModel extends Omit<<%- rowType %>, <%- formModelFields.map(d => `"${d.key}"`).join("|") %> > {
  <% formModelFields.forEach(function(item){ %>
    <%- item.key %>: <%- item.meta?.includes('date-time') ? 'number' : 'string' %><% if(item.title) { %> // <%- item.title %><% } %>
  <% }); %>
}
</script>