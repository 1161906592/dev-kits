import { FormInst } from "naive-ui"

export const XXXModal = defineComponent({
  props: {
    ...createModalProps<<%- inputType %>>(),
  },
  setup(props) {
    const formInstRef = ref<FormInst | null>(null)
    <%- include( `${process.cwd()}/.swagger/formRules.ejs`, { fields: outputFields }) %>

    // 提交表单
    const {
      loadingRef,
      submit: { modelRef, handleSubmit, resetFields },
    } = useSubmitLogic(
      async (model) => {
        <%- include( `${process.cwd()}/.swagger/converter.ejs`, { fields: outputFields }) %>

        const res = await <%- name %>({
          ...pickConvert(model, converter)
        })

        return res.content
      },
      {
        onSuccess() {
          perferMessage.success('操作成功')
          props.onUpdate?.()
          props['onUpdate:show']?.(false)
        },
        model: () => ({} as PartialNull<ModalFormModel>),
        validate: () => formInstRef.value?.validate(),
        manual: true,
      }
    )

    useModalLogic({
      props,
      onShow: () => {
        if (props.data) {
          <%- include( `${process.cwd()}/.swagger/converter.ejs`, { fields: inputFields, isForm: true }) %>
          modelRef.value = pickConvert(props.data, converter, null)
        } else {
          resetFields()
        }
      },
      restoreValidation: () => formInstRef.value?.restoreValidation()
    })

    <%- include( `${process.cwd()}/.swagger/formFields.ejs`, { fields: outputFields }) %>
    return () => (
      <NModal
        preset="card"
        showIcon={false}
        maskClosable={false}
        title="title"
        show={props.show}
        onUpdate:show={props['onUpdate:show']}
        style={{ width: '900px' }}
        size="small"
        autoFocus={false}
        {...presetStyleModal}
        v-slots={{
          footer: () => (
            <NSpace size="large" justify="end">
              <NButton onClick={() => props['onUpdate:show']?.(false)}>取消</NButton>
              <NButton type="primary" onClick={handleSubmit} loading={loadingRef.value}>
                确定
              </NButton>
            </NSpace>
          ),
        }}
      >
        <NForm
          model={modelRef.value}
          ref={formInstRef}
          rules={rules}
          labelPlacement="left"
          requireMarkPlacement="left"
          labelWidth={120}
        >
          <div class="un-p-12px">
            {renderFields()}
          </div>
        </NForm>
      </NModal>
    )
  },
})

/**
 * 表单数据类型
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 */
<%- include( `${process.cwd()}/.swagger/formModel.ejs`, { typeName: outputType, fields: outputFields }) %>